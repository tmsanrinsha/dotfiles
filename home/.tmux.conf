# 基本設定 {{{1
# ============================================================================
## 以下のように省略できる
# set-option => set
# set-window-option => setw

## Prefixキーの変更
# 既定のPrefixキー(Ctrl+b)の割り当てを解除
unbind-key C-b
# Ctrl+qをPrefixキーにする
set-option -g prefix C-q
# Ctrl+q, qでCtrl+qを送る
bind-key q send-prefix

# 256色
# tmux起動時に$TERMに256色に対応した端末(xterm-256colorなど)が設定されていると
# 256色が使えるが、そうでない場合はtmux -2と打って起動すると、256色が使えるようになる。
# 起動後はデフォルトでは$TERMはscreenになる。
# emacsなどで256色を使えるようにするにはscreen-256colorのする
set-option -g default-terminal "screen-256color"
# xterm*に設定するとvimの背景色がおかしくなるので xterm-256colorには設定しない

# 設定リロード
bind r source-file ~/.tmux.conf \; display-message "tmux RELOADED!!"

# screen で言うところの scrollback
set-option -g history-limit 50000
set-option -g buffer-limit 20

# 端末のタイトル、効いてない？
set-option -g set-titles on
set-option -g set-titles-string "tmux.#I.#W"

set-option -g visual-activity on
set-window-option -g monitor-activity on
#set-option -g visual-silence on
#set-window-option -g monitor-silence 1
#メッセージの表示時間
set-option -g display-time 1000

# Escを打ったあとの待ち時間
set-option -g escape-time 10

# ウィンドウ等の番号基準値
set-option -g base-index 1
# ウィンドウを閉じ時に番号を振り直す
set-option -g renumber-windows on

# ウィンドウ名が自動的に更新されないようにする
set-window-option -g automatic-rename off
# この設定でうまくいかないときは
# .zshrcに以下の設定をする
# DISABLE_AUTO_TITLE=true
# 参照:http://qiita.com/items/c166700393481cb15e0c

# style {{{1
# ============================================================================
# Solarized 256 {{{2
# ----------------------------------------------------------------------------
# default statusbar colors
# set-option -g status-fg colour136 #yellow
set-option -g status-fg white
set-option -g status-bg colour235 #base02
set-option -g status-attr default
# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim
# active window title colors
set-window-option -g window-status-current-fg white
# set-window-option -g window-status-current-fg colour166 #orange
# set-window-option -g window-status-current-bg colour202 #colour27 #blue
set-window-option -g window-status-current-bg colour27 #blue
# set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright
# pane border
set-option -g pane-border-fg colour244 #base0
set-option -g pane-active-border-fg colour37 #cyan
# message text
set-option -g message-fg yellow
set-option -g message-bg colour235 #base02
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour colour64 #green

# ステータスラインカスタム関連
# set-option -g status-fg white
# set-option -g status-attr dim

# ステータスラインカスタム関連
# set-option -g status-fg white
# set-option -g status-attr dim

# Ingress {{{2
# ----------------------------------------------------------------------------
# # default statusbar colors
# set-option -g status-fg colour87
# set-option -g status-bg colour235
# set-option -g status-attr default
#
# # default window title colors
# set-window-option -g window-status-fg colour30
# set-window-option -g window-status-bg default
#
# # active window title colors
# set-window-option -g window-status-current-fg colour87
# set-window-option -g window-status-current-bg colour24
# set-window-option -g window-status-current-attr bold
#
# # pane border
# set-option -g pane-border-fg colour244
# set-option -g pane-active-border-fg colour87
#
# # message text
# set-option -g message-fg colour87
# set-option -g message-bg colour235
#
# # copy mode
# set-window-option -g mode-fg colour87
# set-window-option -g mode-bg colour24
# set-window-option -g mode-attr bold
#
# # pane number display
# set-option -g display-panes-active-colour colour87
# set-option -g display-panes-colour colour30
#
# # clock
# set-window-option -g clock-mode-colour colour87

# status {{{1
# ============================================================================
# 左部:whoami@hostname
# set-option -g status-left '#50[fg=green,bold][#20(whoami)@#H]#[default]'
set-option -g status-left '#{?pane_synchronized,#[bg=red],}#{?client_prefix,#[bg=cyan],}[#S]'
# 右部:[2011/03/06(Sun)20:21]
#set-option -g status-right '#[fg=white,bold][%Y/%m/%d(%a)%H:%M]#[default]'
set-option -g status-right '[%Y/%m/%d(%a)%H:%M]'
# set-option -g status-right-bg black #colour235

# ステータスライン更新間隔(秒)
# set-option -g status-interval 5
# set-option -g status-left-length 100
# set-option -g status-right-length 50

# set-option -g message-attr bold
# set-option -g message-fg white
# set-option -g message-bg red

# set-window-option -g mode-bg white
# set-window-option -g mode-fg black

# session {{{1
# ==============================================================================
bind C command-prompt "new-session -s '%%'"
bind Space choose-session
bind Q switch-client -l # last-sessionに移動
bind a attach-session -d # 自分以外をデタッチさせる

# window {{{1
# ============================================================================
# 新ウィンドウ作成
bind c new-window
# ウィンドウ終了
bind K confirm-before -p "kill-window #I? (y/n)" kill-window
# 直前のウィンドウ
bind C-q last-window
# 次のウィンドウ
bind C-n next-window
# 前のウィンドウ
bind C-p previous-window
# windowをpecoで選択する
bind w split-window -c '#{pane_current_path}' "tmux list-windows -F '#{window_index}: #{window_name}#{window_flags} (#{window_panes} panes) #{pane_current_path} #{?window_active, (active),}' | peco | cut -d':' -f 1 | xargs tmux select-window -t"

# ssh先でwindow分割・生成してssh先に接続する {{{2
# ----------------------------------------------------------------------------
bind C-s run-shell "tmux split-window -v \"eval $(ps -t #{pane_tty} | awk '/[s]sh/ {print $4,$5}'); exec $SHELL\""
bind C-v run-shell "tmux split-window -h \"eval $(ps -t #{pane_tty} | awk '/[s]sh/ {print $4,$5}'); exec $SHELL\""
bind C-c run-shell "tmux neww            \"eval $(ps -t #{pane_tty} | awk '/[s]sh/ {print $4,$5}'); exec $SHELL\""

# ウィンドウの移動
# 現在のウィンドウをeditorセッションに移動
#  prefix . editor
# processesの1をeditorセッションに移動する
#  move-window -s processes:1 -t editor

# pain {{{1
# ============================================================================
# ウィンドウの縦分割
bind s split-window -v
# ウィンドウの横分割
bind v split-window -h

# ペイン間の移動
bind k   select-pane -U
bind C-k select-pane -U
bind j   select-pane -D
bind C-j select-pane -D
bind h   select-pane -L
bind C-h select-pane -L
bind l   select-pane -R
bind C-l select-pane -R

# ペインの移動
# last-windowのlast-paneと現在のpaneの交換
bind ^ swap-pane -s :!
# join-pane
# http://d.hatena.ne.jp/kozo2/20111202/1322827858
# アクティブペインを前回のアクティブウィンドウに移動する
bind > join-pane -t:!
# 前回のアクティブペインをアクティブウィンドウに引っ張ってくる
bind < join-pane -s:!

# http://d.hatena.ne.jp/kozo2/?of=-17
#bind-key C-n swap-window -t:+ \; swap-pane -s:-
#bind-key C-p swap-window -t:- \; swap-pane -s:+

# アクティブなペインを新しいウィンドウに分割する
bind b break-pane

# ペインリサイズ
bind -r Left  resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Down  resize-pane -D 5
bind -r Up    resize-pane -U 5
bind -r M-h   resize-pane -L 40
bind -r M-l   resize-pane -R 40
bind -r M-j   resize-pane -D 10
bind -r M-k   resize-pane -U 10

# ペイン番号表示
bind L display-panes

# ペインの同期のトグル
bind-key S set-window-option synchronize-panes
#}}}
# copy mode {{{
# ==============================================================================
# コピーモード突入
bind [ copy-mode
# ペースト
#bind p paste-buffer

# コピーモードでのカーソル移動を vi 風にする
# :list-keys -t vi-copy. で確認可能
set-window-option -g mode-key vi
bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
# できない
# bind -t vi-copy C-v rectangle-toggle \; send-keys v
bind -t vi-copy y copy-selection

bind -t vi-copy @ search-again
bind -t vi-copy ` search-reverse
# プロンプトの2つ上の出力結果をコピーしてペースト
# Eではなく$を使いたいがうまくいかない
bind * copy-mode \; send-keys kk 0 Space E C-m \; paste \;

# コピーモードでコピーした後、クリップボードに保存されないとき
# http://doda.b.sourceforge.jp/2011/12/15/tmux-set-clipboard/
set-option -ag terminal-overrides ",*:Ms=\\E]52;%p1%s;%p2%s\\7"
#}}}
# command prompt {{{
# =============================================================================
set-window-option -g status-keys emacs
# }}}
# mouse {{{1
# ==============================================================================
if-shell "[[ $(echo \"$(tmux -V | cut -d' ' -f2) < 2.1\" | bc) == 1 ]]" "\
    set-option -g mode-mouse on;\
    set-option -g mouse-select-pane on;\
    set-option -g mouse-select-window on;\
    set-option -g mouse-resize-pane on;\
"
# set-option -g mode-mouse on          マウスドラッグでコピーモード
# set-option -g mouse-select-pane on   マウスクリックでペイン選択
# set-option -g mouse-select-window on マウスクリックでwindow選択
# set-option -g mouse-resize-pane on   マウスでペインの大きさの変更

if-shell "[[ $(echo \"$(tmux -V | cut -d' ' -f2) >= 2.1\" | bc) == 1 ]]" "set -g mouse on"

# 特殊なキーバインドの設定 {{{1
# ============================================================================
set-window-option -g xterm-keys on # to make ctrl-arrow, etc. work
# http://sanrinsha.lolipop.jp/blog/2012/07/%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%81%A7ctrltab%E3%81%A8%E3%81%8B%E3%82%92%E4%BD%BF%E3%81%86.html
# Ctrl+Tab, Shift+Ctrl+Tabでウィンドウの切り替え
# Ctrl+数値でそのウィンドウ番号に切り替え
set-option -ag terminal-overrides ",*:kf13=[27;5;9~:kf14=[27;6;9~:kf15=[27;5;49~:kf16=[27;5;50~:kf17=[27;5;51~:kf18=[27;5;52~:kf19=[27;5;53~:kf20=[27;5;54~"
# prefix :server-infoで確認

# bind -n S-F1 next
# bind -n S-F2 prev
# bind -n S-F3 select-window -t 1
# bind -n S-F4 select-window -t 2
# bind -n S-F5 select-window -t 3
# bind -n S-F6 select-window -t 4
# bind -n S-F7 select-window -t 5

# plugin {{{1
# ============================================================================
# tmux plugin manager
set -g @plugin 'tmux-plugins/tpm'

# マウスホイールでのコピーモードの開始と終了をtmux 2.1より前の挙動にする
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

# copy modeで正規表現で検索できるようになる
# ハイライトされるようになる
# あらかじめ設定された便利な正規表現が使える
set -g @plugin 'tmux-plugins/tmux-copycat'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# tmuxinator
# If you use a base-index other than the default, please be sure to also set the pane-base-index
set-window-option -g pane-base-index 1

# vim: filetype=tmux commentstring=#%s

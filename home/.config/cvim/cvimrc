" 拡張機能の画面に行ってcVimの「ファイルのURLへのアクセスを許可」をチェックする
" set localconfig
" :source /path/to/this/cvimrc
" :settings で確認

set localconfig
let homedirectory = '/Users/tmsanrinsha'
let configpath = '~/.config/cvim/cvimrc'

set noautofocus
let barposition = "top"
let locale = "jp"
let hintcharacters = "asdfghjklqwertyuiopzxcvbnm1234567890"

let nextmatchpattern = '((?!first)(next|older|more|>|›|»|forward|次へ|次のページ| )+)'
let previousmatchpattern = '((?!last)(prev(ious)?|newer|back|«|less|<|‹|前へ|前のページ|前に| )+)'

" Movement
map <C-f> scrollFullPageDown
map <C-b> scrollFullPageUp

map I passKeys
" Miscellaneous
map g/ openLinkSearchBar
unmap R
map R reloadTabUncached

" Tab Navigation
map K previousTab
map J nextTab

unmap x
map d closeTab
map u lastClosedTab

" Text boxes
imap <C-a> beginningOfLine
imap <C-k> deleteToEnd
" iunmap <C-w>
" unmap <C-w>
imap <C-w> deleteWord
imap <M-d> deleteForwardWord
iunmap <C-h>
unmap <C-h>
map <C-h> deleteChar
imap <C-h> deleteChar
imap <C-d> deleteForwardChar
imap <M-b> backwardWord
imap <M-f> forwardWord
imap <C-n> forwardLine
imap <C-p> backwardLine
imap <M-a> selectAll
imap <C-v> editWithVim

" map <C-o> goBack
let mapleader = ";"
map <Leader>vr :source ~/.config/cvim/cvimrc<CR>
map ,h :history<Space>


" 選択した語句でタブを開く
unmap gxT
unmap gxt
unmap gx0
unmap gx$
map gx :execute vyP<CR>
" aで:tabnew googleして<CR>てきな挙動になる
" map gxa :execute vy:open alc @"<CR>
" map a :tabnew alc
" map gxa :execute vy: a @"<CR>


let qmark b = ['http://bookstore.yahoo.co.jp']
let qmark c = ['https://www.google.com/calendar/']
let qmark d = ['https://anime.dmkt-sp.jp/animestore/mp_viw_pc']
let qmark D = ['https://github.com/tmsanrinsha/dotfiles']
let qmark F = ['https://www.facebook.com/']
let qmark f = ['http://finance.yahoo.co.jp/']
let qmark h = ['http://b.hatena.ne.jp/tmsanrinsha/bookmark']
let qmark m = ['https://moneyforward.com/']
let qmark M = ['https://mail.google.com/']
let qmark n = ['http://www.nicovideo.jp/']
let qmark q = ['http://qiita.com/']
let qmark s = ['https://tmsanrinsha.net']
let qmark S = ['https://www.sbisec.co.jp/ETGate']
let qmark t = ['https://twitter.com/']
let qmark T = ['http://tv.yahoo.co.jp/listings/realtime/']
let qmark v = ["http://www.nicovideo.jp/mylist/9352163"]
let qmark w = ['https://detail.wallet.yahoo.co.jp/history']
let qmark y = ['http://www.yahoo.co.jp/']


" これを設定すると検索語句をサジェスチョンされる
let completionengines = []

let searchengine alc = 'http://eow.alc.co.jp/search?q=%s'
let searchengine g = 'https://www.google.co.jp/search?q=%s'
let searchengine gs  = 'https://www.google.co.jp/search?q=site%3Atmsanrinsha.net+%s'
let searchengine t   = 'https://twitter.com/search?vertical=default&q=%s&src=typd'
let searchengine y   = 'http://search.yahoo.co.jp/search?ei=UTF-8&p=%s'
let searchengine yf  = 'http://info.finance.yahoo.co.jp/search/?query=%s'
let searchengine yr  = 'http://realtime.search.yahoo.co.jp/search?p=%s&ei=UTF-8'

" searchaliasを設定しても:openしたときに表示されない
" let searchalias t = 'twitter'

" jupyter notebook
let blacklists = ['*://localhost:8888']

site 'https://mail.google.com/mail/*' {
      unmap n
      unmap p
      unmap u
}

" JavaScriptを実行するには
" :script console.log(settings.hintchars)
" など

" :call echo('hoge')
echo(str) -> {{
  Status.setMessage(str);
  console.log(str)
}}

" yank {{{1
" ============================================================================
yankMarkdownLink() -> {{
  var markdownLink = `[${window.document.title}](${window.location.href})`
  Clipboard.copy(markdownLink);
  Status.setMessage(markdownLink);
}}

map ym :call yankMarkdownLink<CR>

yankTitleAndLink() -> {{
  var titleAndLink = `${window.document.title}\n${window.location.href}`
  Clipboard.copy(titleAndLink);
  Status.setMessage(titleAndLink);
}}

map yn :call yankTitleAndLink<CR>

yankAmazonShortcode() -> {{
  try {
    var asin = window.location.href.match(/\/(?:dp|gp\/product)\/([^?/]+)/)[1];
    var amazonShortcode = `{{% amazon ${asin} %}` + `}`;
    Clipboard.copy(amazonShortcode);
    Status.setMessage(amazonShortcode);
  } catch(e) {
    Status.setMessage(e);
  }
}}

map ya :call yankAmazonShortcode<CR>

yankGitHub() -> {{
  var user_repo = window.location.pathname.match(/^\/([^/]+\/[^/]+)/)[1];
  Clipboard.copy(user_repo);
  Status.setMessage(user_repo);
}}

map yg :call yankGitHub<CR>

map yh yankDocumentUrlHtmlFormatted

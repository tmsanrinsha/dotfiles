[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
    nnoremap [:dein:] <Nop>
    nmap <Leader>D [:dein:]
    nnoremap [:dein:]c :<C-u>call dein#clear_state()<CR>
    nnoremap [:dein:]u :<C-u>call dein#update()<CR>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
if = 'executable("cc") && $OS !~ "Windows_NT"'

# Neovim compatible {{{1
# ============================================================================
[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'
# hook_add = '''
# let g:python3_host_prog = expand('~/bin/python-debug.sh')
# '''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

# unite.vim, vimfiler {{{1
# ============================================================================
[[plugins]]
repo = 'Shougo/neomru.vim'
hook_add = '''
    "最近使用したファイル一覧
    nnoremap <silent> [unite]fm :<C-U>Unite neomru/file<CR>
    "最近使用したディレクトリ一覧
    nnoremap <silent> [unite]dm :<C-U>Unite neomru/directory<CR>

    " ファイルへの書き込みを60秒ごとにする
    let g:neomru#update_interval = 60
    " ファイルが存在するかチェックする
    let g:neomru#do_validate = 1

    let g:neomru#file_mru_limit = 2000
'''

[[plugins]]
repo = 'tmsanrinsha/unite-ghq'
build = "test -f ~/bin/ghq-list.sh || ln -s `pwd`/bin/ghq-list.sh ~/bin"

[[plugins]]
repo = 'thinca/vim-unite-history'

# [[plugins]]
# repo = 'ujihisa/unite-locate'

# [[plugins]]
# repo = 'tacroe/unite-mark'

[[plugins]]
repo = 'tsukkee/unite-tag'

[[plugins]]
repo = 'rhysd/unite-zsh-cdr.vim'

[[plugins]]
repo = 'Shougo/neossh.vim'

[[plugins]]
repo = 'ujihisa/vimshell-ssh'

# neocomplete, deoplete {{{1
# ============================================================================
[[plugins]]
repo = 'Shougo/neco-syntax'

# [[plugins]]
# repo = 'ujihisa/neco-look'
# external_commands = 'look'
# vim_version = '7.3.825'

[[plugins]]
repo = 'Shougo/neoinclude.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'tmsanrinsha/deoplete-mozc'
if = 'EnableDeoplete()'

# snippet {{{1
# ============================================================================
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# template {{{1
# ============================================================================
[[plugins]]
repo = 'thinca/vim-template'

# operator {{{1
# ============================================================================
[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-surround'

# textobj {{{1
# ============================================================================
[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
# lazyにすると最初の"*yieでクリップボードではなく、ヤンクされる
repo = 'kana/vim-textobj-entire'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'

[[plugins]]
repo = 'kana/vim-textobj-function'

[[plugins]]
repo = 'kentaro/vim-textobj-function-php'

[[plugins]]
repo = 'kana/vim-textobj-indent'

[[plugins]]
repo = 'rhysd/vim-textobj-conflict'

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'

# [[plugins]]
# repo = 'anyakichi/vim-textobj-xbrackets'

# gf {{{1
# ============================================================================
[[plugins]]
repo = 'kana/vim-gf-user'

[[plugins]]
repo = 'kana/vim-gf-diff'

# indent {{{1
# ============================================================================
[[plugins]]
repo = 'ciaranm/detectindent'

# 重い
# [[plugins]]
# repo = 'tpope/vim-sleuth'
# }}}

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
    map ' <Plug>(easymotion-s2)
    map f <Plug>(easymotion-fl)
    map t <Plug>(easymotion-tl)
    nmap ct c<Plug>(easymotion-tl)
    map F <Plug>(easymotion-Fl)
    map T <Plug>(easymotion-Tl)
    " map ' <Plug>(easymotion-bd-jk)
    let g:EasyMotion_smartcase = 1
    let g:EasyMotion_keys = 'asdfgghjkl;:qwertyuiop@zxcvbnm,./1234567890-'
    let g:EasyMotion_do_mapping = 0
'''

# [[plugins]]
# repo = 'kana/vim-submode'

# [[plugins]]
# repo = 'terryma/vim-multiple-cursors'

# [[plugins]]
# repo = 'tmsanrinsha/diffchar.vim'

[[plugins]]
repo = 'vim-scripts/QuickFixCurrentNumber'
depends = 'vim-scripts/ingo-library'

[[plugins]]
repo = 'vim-scripts/ingo-library'

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'osyo-manga/vital-coaster'

[[plugins]]
repo = 'tmsanrinsha/vim-emacscommandline'

# project {{{1
# ============================================================================
[[plugins]]
repo = 'airblade/vim-rooter'
hook_add = '''
let g:rooter_manual_only = 1
let g:rooter_patterns = [
\ '.git', '.git/', '_darcs/', '.hg/', '.bzr/', '.svn/',
\ 'composer.json'
\]
'''

[[plugins]]
repo = 'tpope/vim-projectionist'
# }}}

[[plugins]]
repo = 'tpope/vim-fugitive'
augroup = 'fugitive'

[[plugins]]
repo = 'jez/vim-github-hub'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

# [[plugins]]
# repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'LeafCage/foldCC'

[[plugins]]
repo = 'vim-jp/vital.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
# depends = ['vim-fugitive', 'tagbar', 'vim-anzu']

[[plugins]]
repo = 'thinca/vim-prettyprint'

[[plugins]]
repo = 'mattn/webapi-vim'

# colorscheme {{{1
# ============================================================================
[[plugins]]
repo = 'tmsanrinsha/molokai'
name = 'my_molokai'

[[plugins]]
repo = 'tmsanrinsha/vim-monokai'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

# [[plugins]]
# repo = 'reedes/vim-colors-pencil'

# }}}

[[plugins]]
repo = 'h1mesuke/vim-alignta'

[[plugins]]
repo = 'vim-scripts/transpose-words'
hook_add = '''
nmap <S-Tab> <Plug>Transposewords
imap <S-Tab> <Plug>Transposewords
let g:transwrd_wordpattern = '\k\+\%((\k\+)\)\?'
'''

# 起動時, 開いたとき {{{1
# ============================================================================
[[plugins]]
repo = 'thinca/vim-singleton'

[[plugins]]
repo = 'kopischke/vim-fetch'

# 保存時 {{{1
# ============================================================================
[[plugins]]
repo = 'vim-scripts/sudo.vim'

[[plugins]]
repo = 'vim-scripts/PreserveNoEOL'
if = '!exists("&fixeol")'
hook_add = '''
let g:PreserveNoEOL = 1
'''

# [[plugins]]
# repo = 'haya14busa/vim-bkup'
# hook_add = '''
# let g:bkup#dir = expand($VIM_CACHE_DIR . '/bkup')
# '''

# filetype {{{1
# =============================================================================
## debug {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'joonty/vdebug'
lazy = 1
hook_add = '''
nmap <F5>  <Plug>(vdebug-run)
nmap <F10> <Plug>(vdebug-set_breakpoint)
'''
on_map = { n = '<Plug>' }
hook_source = '''
nnoremap <Plug>(vdebug-set_run) :python debugger.run()<CR>
nnoremap <Plug>(vdebug-set_breakpoint) :python debugger.set_breakpoint()<CR>

let g:vdebug_options= {
\    "port" : 9000,
\    "timeout" : 20,
\    "on_close" : 'detach',
\    "break_on_open" : 1,
\    "ide_key" : '',
\    "path_maps" : {},
\    "debug_window_level" : 0,
\    "debug_file_level" : 0,
\    "debug_file" : "",
\    "watch_window_style" : 'expanded',
\    "marker_default" : '⬦',
\    "marker_closed_tree" : '▸',
\    "marker_open_tree" : '▾'
\}
" let g:vdebug_options['break_on_open']= 0

let g:vdebug_keymap = {
\    "step_over" : "<F2>",
\    "step_into" : "<F3>",
\    "step_out" : "<F4>",
\    "run" : "<F5>",
\    "close" : "<F6>",
\    "detach" : "<F7>",
\    "run_to_cursor" : "<F9>",
\    "set_breakpoint" : "<F10>",
\    "get_context" : "<F11>",
\    "eval_under_cursor" : "<F12>",
\    "eval_visual" : "<Leader>e",
\}

autocmd MyVimrc BufWinEnter DebuggerBreakpoints
\   nnoremap <buffer> dd ^:BreakpointRemove <C-r><C-w><CR>
'''

## vim-precious {{{2
# -----------------------------------------------------------------------------
# [[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
# repo = 'osyo-manga/vim-precious'
# depends = ['context_filetype.vim']

## arduino {{{2
# ----------------------------------------------------------------------------
# [[plugins]]
# repo = '4Evergreen4/vim-hardy'

## chef {{{2
# ============================================================================
[[plugins]]
repo = 'vadv/vim-chef'

## confluence {{{2
# ----------------------------------------------------------------------------
[[plugins]]
repo = 'vim-scripts/confluencewiki.vim'

## Fluentd {{{2
# ----------------------------------------------------------------------------
[[plugins]]
repo = 'yoppi/fluentd.vim'

## Go lang {{{2
# ============================================================================
# lazyに置くとcommandの設定がうまくいかなかったのでこちらで
[[plugins]]
repo = 'fatih/vim-go'
if = "MyHasPatch('patch-7.4.1689')"

## graphviz {{{2
# -----------------------------------------------------------------------------
# [[plugins]]
# repo = 'wannesm/wmgraphviz.vim'

## java {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'artur-shaik/vim-javacomplete2'

## javascript {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'jelera/vim-javascript-syntax'

[[plugins]]
repo = 'nono/jquery.vim'

[[plugins]]
repo = 'felixge/vim-nodejs-errorformat'

## JSON {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'elzr/vim-json'

## Markdown {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'plasticboy/vim-markdown'
# 設定はvimrcに記述

# yaml frontmatterがヘッダーと判定されてしまうのでコメントアウト
# [[plugins]]
# repo = 'nelstrom/vim-markdown-folding'

## MQL4 {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'vobornik/vim-mql4'

## Octave {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'tmsanrinsha/octave.vim--'

## Perl {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'vim-perl/vim-perl'
build = 'make clean carp dancer highlight-all-pragmas moose test-more try-tiny'

[[plugins]]
repo = 'c9s/perlomni.vim'

## PHP {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'shawncplus/phpcomplete.vim'
if = '!EnableDeoplete()'

# [[plugins]]
# repo = 'StanAngeloff/php.vim'

## Python {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'zchee/deoplete-jedi'
if = 'EnableDeoplete()'

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']
hook_source = 'call SourceRc("plugins/jedi_hook_source.vim")'

[[plugins]]
repo = 'lambdalisue/vim-pyenv'
depends = ['jedi-vim']
on_ft = ['python']

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'

# [[plugins]]
# repo = 'wilywampa/vim-ipython'

## R lang {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'jcfaria/Vim-R-plugin'

## Ruby {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'osyo-manga/vim-monster'
lazy = 1
on_ft = 'ruby'
# # debug
# let g:monster#debug#enable=1 
# echo monster#debug#log()
# call monster#debug#clear_log()#
#
# # rcodetools進んでいるリポジトリ
# https://github.com/raa0121/rcodetools
#
# # rsenseのvim plugin
# https://github.com/marcus/rsense

[[plugins]]
repo = 'vim-ruby/vim-ruby'

[[plugins]]
repo = 'rhysd/unite-ruby-require.vim'
# hook_source = '''
# let g:unite_source_ruby_require_cmd = '/usr/local/opt/ruby/bin/ruby'
# '''

## shell {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'chrisbra/vim-sh-indent'

## solidity {{{2
# -----------------------------------------------------------------------------
# [[plugins]]
# repo = 'tomlion/vim-solidity'

## SQL hive {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'autowitch/hive.vim'

## tmux {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'zaiste/tmux.vim'

## toml {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'cespare/vim-toml'

## twig {{{2
# -----------------------------------------------------------------------------
# [[plugins]]
# repo = 'evidens/vim-twig'

## Vim {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'ynkdir/vim-vimlparser'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'thinca/vim-ft-help_fold'

[[plugins]]
repo = 'thinca/vim-localrc'

## vimperator {{{2
# -----------------------------------------------------------------------------
[[plugins]]
repo = 'vimperator/vimperator.vim'

# other {{{1
# ============================================================================
[[plugins]]
repo = 'b4b4r07/vim-shellutils'
lazy = 1
on_cmd = ['Vim', 'Ls', 'Mv', 'Cp', 'File', 'Cat', 'Head', 'Tail', 'Touch', 'Mkdir']

[[plugins]]
repo = 'basyura/twibill.vim'
